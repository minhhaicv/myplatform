<?phpclass post_frontend extends frontend {	function __construct(){		parent::__construct('post', 'postSkin');				$this->view->alias = 'Post';	}	    function navigator(){		global $request;			switch($request->query['action']){			case 'detail':					$this->loadDetail($request->query[0]);				break;			case 'category':					$this->loadCategory($request->query[0]);				break;			default :					$this->loadDefault();				break;		}	}		function loadDetail($item = ''){
		global $config, $pPrefer;		
		$query = explode('-', $item);
		$itemId = abs(intval($query[count($query)-1]));
					$alias = $this->model->getAlias();		$option = array (                    'select' => "{$alias}.id,                                  {$alias}.title,                                  {$alias}.content,                                 Category.title,                                 Category.slug                                 ",                    'where' => "{$alias}.status > 0 AND {$alias}.id = " . $itemId . " AND {$alias}.deleted = 0",                    'order' => "{$alias}.id desc",                    'limit' => 1,                    'joins' => array (                                    array (                                        'category' => array (                                                        'alias' => 'Category',                                                        'type' => 'INNER',                                                        'condition' => array (                                                                           "{$alias}.category_id" => "Category.id"                                                                       )                                            ),                                        )                                    )                );	    	$obj = $this->model->find($option, 'first');    	
		if(empty($obj)) 		    return $pPrint->boink_it($config->base_url.'error', '404');
		
		$this->output = $this->view->detail($obj, $option);
	}		function loadCategory($category = ''){		global $config, $app;				$data = array();		echo 1;exit;		$query = explode('-', $category);		$catId = abs(intval($query[count($query)-1]));				$app->import('entity', array('category'));        $entity = new category_entity();		$lists = $entity->getChildren($catId);		$data['category'] = $lists[$catId];				$catId = implode(',', Helper::getHelper('hash')->extract($lists, 'Category'));            	$page = 1; $size = 10;    	    	$alias = $this->model->getAlias();    	$option = array (                    'select' => "{$alias}.id,                                  {$alias}.title,                                  {$alias}.content,                                  File.id,                                 File.path,                                 File.name,                                 File.phyname,                                 File.ext,                                 SEO.id,                                 SEO.alias                                 ",                    'where' => "{$alias}.status > 0 AND {$alias}.category_id IN (" . $catId . ") AND {$alias}.deleted = 0",                    'order' => "{$alias}.id desc",                    'limit' => $size,                    'page' => $page,                                        'joins' => array (                                    array (                                        'file' => array (                                                        'alias' => 'File',                                                        'type' => 'LEFT',                                                        'condition' => array (                                                                        "{$alias}.file" => "File.id"                                                         )                                         ),                                        'seo' => array (                                                        'alias' => 'SEO',                                                        'type' => 'LEFT',                                                        'condition' => array (                                                                        "{$alias}.seo" => "SEO.id"                                                        )                                        )                                    )                                 )                                         );		    $data['list'] = $this->model->find($option);	    $data['first'] = array_shift($data['list']);		$this->output = $this->view->category($data);
	}		function _getOther($obj = 0){		$prefix = $this->model->getPrefix();
		$select = $prefix.'Id, '.$prefix.'Cat, '.$prefix.'Title, '.$prefix.'SEO';
		$this->model->setSelect($select);				$cond = $prefix.'Id < '.$obj->getId().' AND '.$prefix.'Cat = '.$obj->getCat().' AND '.$prefix.'Status > 0';		$this->model->setCondition($cond);				$this->model->setLimit(array(0, 5));		$this->model->setOrder($prefix.'Id DESC');				$others = $this->model->getObjectByCondition();		Helper::getHelper('format')->setSEO($others);		
		return $others;	}			function loadDefault(){		echo 1434;exit;		$pPrint->boink_it($config->base_url);	}}